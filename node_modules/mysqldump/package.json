{
  "_from": "mysqldump",
  "_id": "mysqldump@1.4.2",
  "_inBundle": false,
  "_integrity": "sha1-LNq2kcmLamx/lXcHLn1bDSKBIm0=",
  "_location": "/mysqldump",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "mysqldump",
    "fetchSpec": "latest",
    "name": "mysqldump",
    "raw": "mysqldump",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mysqldump/-/mysqldump-1.4.2.tgz",
  "_shasum": "2cdab691c98b6a6c7f9577072e7d5b0d2281226d",
  "_spec": "mysqldump",
  "_where": "/home/kevin/KExport",
  "author": {
    "name": "Andre Caetano"
  },
  "bugs": {
    "url": "https://github.com/webcaetano/mysqldump/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "async": "^1.4.2",
    "lodash": "^3.10.1",
    "mq-node": "^1.0.7"
  },
  "deprecated": false,
  "description": "Create a DUMP from MySQL",
  "devDependencies": {
    "chai": "^3.2.0",
    "mocha": "^2.3.2"
  },
  "homepage": "https://github.com/webcaetano/mysqldump",
  "keywords": [
    "backup",
    "backup",
    "database",
    "database",
    "dump",
    "mysql",
    "mysql-dump",
    "restore"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "mysqldump",
  "optionalDependencies": {},
  "readme": "# Mysql Dump\n\n[![npm version](https://badge.fury.io/js/mysqldump.svg)](http://badge.fury.io/js/mysqldump) [![Build Status](https://travis-ci.org/webcaetano/mysqldump.svg?branch=master)](https://travis-ci.org/webcaetano/mysqldump)\n\nCreate a backup from MySQL\n\n## Installation\n\n```\nnpm install mysqldump\n```\n\nExample \n```javascript\nvar mysqlDump = require('mysqldump');\n\nmysqlDump({\n\thost: 'localhost',\n\tuser: 'root',\n\tpassword: '',\n\tdatabase: 'test',\n\tdest:'./data.sql' // destination file\n},function(err){\n\t// create data.sql file;\n})\n```\n\nFull Options Example :\n\n```javascript\nvar mysqlDump = require('mysqldump');\n\nmysqlDump({\n\thost: 'localhost',\n\tuser: 'root',\n\tpassword: '',\n\tdatabase: 'test',\n\ttables:['players'], // only these tables\n\twhere: {'players': 'id < 1000'}, // Only test players with id < 1000\n\tifNotExist:true, // Create table if not exist\n\tdest:'./data.sql' // destination file\n},function(err){\n\t// create data.sql file;\n})\n```\n\n\n## Options\n\n\n#### host\n\nType: `String`\n\nUrl to Mysql host. `Default: localhost`\n\n#### port\n\nType: `String`\n\nPort to Mysql host. `Default: 3306`\n\n#### user\n\nType: `String`\n\nThe MySQL user to authenticate as.\n\n#### password\n\nType: `String`\n\nThe password of that MySQL user\n\n#### database\n\nType: `String`\n\nName of the database to dump.\n\n#### tables \n\nType: `Array`\n\nArray of tables that you want to backup.\n\nLeave Blank for All. `Default: [] ALL`\n\n#### schema \n\nType: `Boolean`\n\nOutput table structure `Default: true`;\n\n#### data \n\nType: `Boolean`\n\nOutput table data for ALL tables `Default: true`;\n\n#### where\nType: `Object`\n\nWhere clauses to limit dumped data `Example: where: {'users': 'id < 1000'}`\n\nCombine with `data: false` to only dump tables with where clauses  `Default: null`;\n\n#### ifNotExist \n\nType: `Boolean`\n\nCreate tables if not exist method `Default: true`;\n\n#### dropTable \n\nType: `Boolean`\n\nDrop tables if exist `Default: false`;\n\n#### getDump \n\nType: `Boolean`\n\nReturn dump as a raw data on callback instead of create file `Default: false`;\n\n#### dest \n\nType: `String`\n\nOutput filename with directories `Default: './data.sql'`;\n\n#### socketPath\n\nType: `String`\n\nPath to a unix domain socket to connect to. When used `host` and `port` are ignored.\n\n[![npm](https://nodei.co/npm/mysqldump.png?downloads=true&downloadRank=true&stars=true)](https://www.npmjs.com/package/mysqldump)\n\n---------------------------------\n\nThe MIT [License](https://raw.githubusercontent.com/webcaetano/mysqldump/master/LICENSE.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webcaetano/mysqldump.git"
  },
  "scripts": {
    "test": "mocha test.js"
  },
  "version": "1.4.2"
}
